
lcd1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000064e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  0000064e  000006c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000006ce  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000700  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  0000073c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001746  00000000  00000000  00000814  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000789  00000000  00000000  00001f5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009af  00000000  00000000  000026e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000018c  00000000  00000000  00003094  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000048e  00000000  00000000  00003220  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b85  00000000  00000000  000036ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  00004233  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e4       	ldi	r30, 0x4E	; 78
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <main>
  7a:	0c 94 25 03 	jmp	0x64a	; 0x64a <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_setpindir>:
		break ;
		default:
		break ;
	}
	return value;
}
  82:	82 34       	cpi	r24, 0x42	; 66
  84:	19 f1       	breq	.+70     	; 0xcc <DIO_setpindir+0x4a>
  86:	18 f4       	brcc	.+6      	; 0x8e <DIO_setpindir+0xc>
  88:	81 34       	cpi	r24, 0x41	; 65
  8a:	39 f0       	breq	.+14     	; 0x9a <DIO_setpindir+0x18>
  8c:	08 95       	ret
  8e:	83 34       	cpi	r24, 0x43	; 67
  90:	b1 f1       	breq	.+108    	; 0xfe <DIO_setpindir+0x7c>
  92:	84 34       	cpi	r24, 0x44	; 68
  94:	09 f4       	brne	.+2      	; 0x98 <DIO_setpindir+0x16>
  96:	4c c0       	rjmp	.+152    	; 0x130 <DIO_setpindir+0xae>
  98:	08 95       	ret
  9a:	41 30       	cpi	r20, 0x01	; 1
  9c:	59 f4       	brne	.+22     	; 0xb4 <DIO_setpindir+0x32>
  9e:	2a b3       	in	r18, 0x1a	; 26
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	02 c0       	rjmp	.+4      	; 0xaa <DIO_setpindir+0x28>
  a6:	88 0f       	add	r24, r24
  a8:	99 1f       	adc	r25, r25
  aa:	6a 95       	dec	r22
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <DIO_setpindir+0x24>
  ae:	82 2b       	or	r24, r18
  b0:	8a bb       	out	0x1a, r24	; 26
  b2:	08 95       	ret
  b4:	2a b3       	in	r18, 0x1a	; 26
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <DIO_setpindir+0x3e>
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	6a 95       	dec	r22
  c2:	e2 f7       	brpl	.-8      	; 0xbc <DIO_setpindir+0x3a>
  c4:	80 95       	com	r24
  c6:	82 23       	and	r24, r18
  c8:	8a bb       	out	0x1a, r24	; 26
  ca:	08 95       	ret
  cc:	41 30       	cpi	r20, 0x01	; 1
  ce:	59 f4       	brne	.+22     	; 0xe6 <DIO_setpindir+0x64>
  d0:	27 b3       	in	r18, 0x17	; 23
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	02 c0       	rjmp	.+4      	; 0xdc <DIO_setpindir+0x5a>
  d8:	88 0f       	add	r24, r24
  da:	99 1f       	adc	r25, r25
  dc:	6a 95       	dec	r22
  de:	e2 f7       	brpl	.-8      	; 0xd8 <DIO_setpindir+0x56>
  e0:	82 2b       	or	r24, r18
  e2:	87 bb       	out	0x17, r24	; 23
  e4:	08 95       	ret
  e6:	27 b3       	in	r18, 0x17	; 23
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <DIO_setpindir+0x70>
  ee:	88 0f       	add	r24, r24
  f0:	99 1f       	adc	r25, r25
  f2:	6a 95       	dec	r22
  f4:	e2 f7       	brpl	.-8      	; 0xee <DIO_setpindir+0x6c>
  f6:	80 95       	com	r24
  f8:	82 23       	and	r24, r18
  fa:	87 bb       	out	0x17, r24	; 23
  fc:	08 95       	ret
  fe:	41 30       	cpi	r20, 0x01	; 1
 100:	59 f4       	brne	.+22     	; 0x118 <DIO_setpindir+0x96>
 102:	24 b3       	in	r18, 0x14	; 20
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	02 c0       	rjmp	.+4      	; 0x10e <DIO_setpindir+0x8c>
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	6a 95       	dec	r22
 110:	e2 f7       	brpl	.-8      	; 0x10a <DIO_setpindir+0x88>
 112:	82 2b       	or	r24, r18
 114:	84 bb       	out	0x14, r24	; 20
 116:	08 95       	ret
 118:	24 b3       	in	r18, 0x14	; 20
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_setpindir+0xa2>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_setpindir+0x9e>
 128:	80 95       	com	r24
 12a:	82 23       	and	r24, r18
 12c:	84 bb       	out	0x14, r24	; 20
 12e:	08 95       	ret
 130:	41 30       	cpi	r20, 0x01	; 1
 132:	59 f4       	brne	.+22     	; 0x14a <DIO_setpindir+0xc8>
 134:	21 b3       	in	r18, 0x11	; 17
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_setpindir+0xbe>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_setpindir+0xba>
 144:	82 2b       	or	r24, r18
 146:	81 bb       	out	0x11, r24	; 17
 148:	08 95       	ret
 14a:	21 b3       	in	r18, 0x11	; 17
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_setpindir+0xd4>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_setpindir+0xd0>
 15a:	80 95       	com	r24
 15c:	82 23       	and	r24, r18
 15e:	81 bb       	out	0x11, r24	; 17
 160:	08 95       	ret

00000162 <DIO_writepin>:
 162:	82 34       	cpi	r24, 0x42	; 66
 164:	19 f1       	breq	.+70     	; 0x1ac <DIO_writepin+0x4a>
 166:	18 f4       	brcc	.+6      	; 0x16e <DIO_writepin+0xc>
 168:	81 34       	cpi	r24, 0x41	; 65
 16a:	39 f0       	breq	.+14     	; 0x17a <DIO_writepin+0x18>
 16c:	08 95       	ret
 16e:	83 34       	cpi	r24, 0x43	; 67
 170:	b1 f1       	breq	.+108    	; 0x1de <DIO_writepin+0x7c>
 172:	84 34       	cpi	r24, 0x44	; 68
 174:	09 f4       	brne	.+2      	; 0x178 <DIO_writepin+0x16>
 176:	4c c0       	rjmp	.+152    	; 0x210 <DIO_writepin+0xae>
 178:	08 95       	ret
 17a:	41 30       	cpi	r20, 0x01	; 1
 17c:	59 f4       	brne	.+22     	; 0x194 <DIO_writepin+0x32>
 17e:	2b b3       	in	r18, 0x1b	; 27
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_writepin+0x28>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_writepin+0x24>
 18e:	82 2b       	or	r24, r18
 190:	8b bb       	out	0x1b, r24	; 27
 192:	08 95       	ret
 194:	2b b3       	in	r18, 0x1b	; 27
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_writepin+0x3e>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_writepin+0x3a>
 1a4:	80 95       	com	r24
 1a6:	82 23       	and	r24, r18
 1a8:	8b bb       	out	0x1b, r24	; 27
 1aa:	08 95       	ret
 1ac:	41 30       	cpi	r20, 0x01	; 1
 1ae:	59 f4       	brne	.+22     	; 0x1c6 <DIO_writepin+0x64>
 1b0:	28 b3       	in	r18, 0x18	; 24
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <DIO_writepin+0x5a>
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	6a 95       	dec	r22
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <DIO_writepin+0x56>
 1c0:	82 2b       	or	r24, r18
 1c2:	88 bb       	out	0x18, r24	; 24
 1c4:	08 95       	ret
 1c6:	28 b3       	in	r18, 0x18	; 24
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <DIO_writepin+0x70>
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	6a 95       	dec	r22
 1d4:	e2 f7       	brpl	.-8      	; 0x1ce <DIO_writepin+0x6c>
 1d6:	80 95       	com	r24
 1d8:	82 23       	and	r24, r18
 1da:	88 bb       	out	0x18, r24	; 24
 1dc:	08 95       	ret
 1de:	41 30       	cpi	r20, 0x01	; 1
 1e0:	59 f4       	brne	.+22     	; 0x1f8 <DIO_writepin+0x96>
 1e2:	25 b3       	in	r18, 0x15	; 21
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <DIO_writepin+0x8c>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	6a 95       	dec	r22
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <DIO_writepin+0x88>
 1f2:	82 2b       	or	r24, r18
 1f4:	85 bb       	out	0x15, r24	; 21
 1f6:	08 95       	ret
 1f8:	25 b3       	in	r18, 0x15	; 21
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_writepin+0xa2>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_writepin+0x9e>
 208:	80 95       	com	r24
 20a:	82 23       	and	r24, r18
 20c:	85 bb       	out	0x15, r24	; 21
 20e:	08 95       	ret
 210:	41 30       	cpi	r20, 0x01	; 1
 212:	59 f4       	brne	.+22     	; 0x22a <DIO_writepin+0xc8>
 214:	22 b3       	in	r18, 0x12	; 18
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_writepin+0xbe>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_writepin+0xba>
 224:	82 2b       	or	r24, r18
 226:	82 bb       	out	0x12, r24	; 18
 228:	08 95       	ret
 22a:	22 b3       	in	r18, 0x12	; 18
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_writepin+0xd4>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_writepin+0xd0>
 23a:	80 95       	com	r24
 23c:	82 23       	and	r24, r18
 23e:	82 bb       	out	0x12, r24	; 18
 240:	08 95       	ret

00000242 <DIO_set_port_direction>:
 242:	82 34       	cpi	r24, 0x42	; 66
 244:	59 f0       	breq	.+22     	; 0x25c <DIO_set_port_direction+0x1a>
 246:	18 f4       	brcc	.+6      	; 0x24e <DIO_set_port_direction+0xc>
 248:	81 34       	cpi	r24, 0x41	; 65
 24a:	31 f0       	breq	.+12     	; 0x258 <DIO_set_port_direction+0x16>
 24c:	08 95       	ret
 24e:	83 34       	cpi	r24, 0x43	; 67
 250:	39 f0       	breq	.+14     	; 0x260 <DIO_set_port_direction+0x1e>
 252:	84 34       	cpi	r24, 0x44	; 68
 254:	39 f0       	breq	.+14     	; 0x264 <DIO_set_port_direction+0x22>
 256:	08 95       	ret
 258:	6a bb       	out	0x1a, r22	; 26
 25a:	08 95       	ret
 25c:	67 bb       	out	0x17, r22	; 23
 25e:	08 95       	ret
 260:	64 bb       	out	0x14, r22	; 20
 262:	08 95       	ret
 264:	61 bb       	out	0x11, r22	; 17
 266:	08 95       	ret

00000268 <DIO_write_port>:
void DIO_write_port( char portname,unsigned char value)
{
	switch(portname)
 268:	82 34       	cpi	r24, 0x42	; 66
 26a:	59 f0       	breq	.+22     	; 0x282 <DIO_write_port+0x1a>
 26c:	18 f4       	brcc	.+6      	; 0x274 <DIO_write_port+0xc>
 26e:	81 34       	cpi	r24, 0x41	; 65
 270:	31 f0       	breq	.+12     	; 0x27e <DIO_write_port+0x16>
 272:	08 95       	ret
 274:	83 34       	cpi	r24, 0x43	; 67
 276:	39 f0       	breq	.+14     	; 0x286 <DIO_write_port+0x1e>
 278:	84 34       	cpi	r24, 0x44	; 68
 27a:	39 f0       	breq	.+14     	; 0x28a <DIO_write_port+0x22>
 27c:	08 95       	ret
	{
		case 'A' :
			PORTA=value;
 27e:	6b bb       	out	0x1b, r22	; 27
		break ;
 280:	08 95       	ret
		case 'B':
			PORTB=value;
 282:	68 bb       	out	0x18, r22	; 24
		break ;
 284:	08 95       	ret
		case 'C' :
			PORTC=value;
 286:	65 bb       	out	0x15, r22	; 21
		break ;
 288:	08 95       	ret
		case 'D':
			PORTD=value;
 28a:	62 bb       	out	0x12, r22	; 18
 28c:	08 95       	ret

0000028e <send_falling_edge>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 28e:	41 e0       	ldi	r20, 0x01	; 1
 290:	60 e0       	ldi	r22, 0x00	; 0
 292:	82 e4       	ldi	r24, 0x42	; 66
 294:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_writepin>
 298:	8f e9       	ldi	r24, 0x9F	; 159
 29a:	9f e0       	ldi	r25, 0x0F	; 15
 29c:	01 97       	sbiw	r24, 0x01	; 1
 29e:	f1 f7       	brne	.-4      	; 0x29c <send_falling_edge+0xe>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <send_falling_edge+0x14>
 2a2:	00 00       	nop
 2a4:	40 e0       	ldi	r20, 0x00	; 0
 2a6:	60 e0       	ldi	r22, 0x00	; 0
 2a8:	82 e4       	ldi	r24, 0x42	; 66
 2aa:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_writepin>
 2ae:	8f e9       	ldi	r24, 0x9F	; 159
 2b0:	9f e0       	ldi	r25, 0x0F	; 15
 2b2:	01 97       	sbiw	r24, 0x01	; 1
 2b4:	f1 f7       	brne	.-4      	; 0x2b2 <send_falling_edge+0x24>
 2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <send_falling_edge+0x2a>
 2b8:	00 00       	nop
 2ba:	08 95       	ret

000002bc <LCD_send_cmd>:
 2bc:	0e 94 34 01 	call	0x268	; 0x268 <DIO_write_port>
 2c0:	40 e0       	ldi	r20, 0x00	; 0
 2c2:	61 e0       	ldi	r22, 0x01	; 1
 2c4:	82 e4       	ldi	r24, 0x42	; 66
 2c6:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_writepin>
 2ca:	0e 94 47 01 	call	0x28e	; 0x28e <send_falling_edge>
 2ce:	8f ec       	ldi	r24, 0xCF	; 207
 2d0:	97 e0       	ldi	r25, 0x07	; 7
 2d2:	01 97       	sbiw	r24, 0x01	; 1
 2d4:	f1 f7       	brne	.-4      	; 0x2d2 <LCD_send_cmd+0x16>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <LCD_send_cmd+0x1c>
 2d8:	00 00       	nop
 2da:	08 95       	ret

000002dc <LCD_inti>:
 2dc:	1f 93       	push	r17
 2de:	cf 93       	push	r28
 2e0:	df 93       	push	r29
 2e2:	c8 2f       	mov	r28, r24
 2e4:	16 2f       	mov	r17, r22
 2e6:	d4 2f       	mov	r29, r20
 2e8:	2f ef       	ldi	r18, 0xFF	; 255
 2ea:	81 ee       	ldi	r24, 0xE1	; 225
 2ec:	94 e0       	ldi	r25, 0x04	; 4
 2ee:	21 50       	subi	r18, 0x01	; 1
 2f0:	80 40       	sbci	r24, 0x00	; 0
 2f2:	90 40       	sbci	r25, 0x00	; 0
 2f4:	e1 f7       	brne	.-8      	; 0x2ee <LCD_inti+0x12>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <LCD_inti+0x1c>
 2f8:	00 00       	nop
 2fa:	6f ef       	ldi	r22, 0xFF	; 255
 2fc:	8c 2f       	mov	r24, r28
 2fe:	0e 94 21 01 	call	0x242	; 0x242 <DIO_set_port_direction>
 302:	41 e0       	ldi	r20, 0x01	; 1
 304:	6d 2f       	mov	r22, r29
 306:	81 2f       	mov	r24, r17
 308:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setpindir>
 30c:	61 e0       	ldi	r22, 0x01	; 1
 30e:	6d 0f       	add	r22, r29
 310:	41 e0       	ldi	r20, 0x01	; 1
 312:	81 2f       	mov	r24, r17
 314:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setpindir>
 318:	62 e0       	ldi	r22, 0x02	; 2
 31a:	6d 0f       	add	r22, r29
 31c:	41 e0       	ldi	r20, 0x01	; 1
 31e:	81 2f       	mov	r24, r17
 320:	0e 94 41 00 	call	0x82	; 0x82 <DIO_setpindir>
 324:	68 e3       	ldi	r22, 0x38	; 56
 326:	8c 2f       	mov	r24, r28
 328:	0e 94 5e 01 	call	0x2bc	; 0x2bc <LCD_send_cmd>
 32c:	61 e0       	ldi	r22, 0x01	; 1
 32e:	8c 2f       	mov	r24, r28
 330:	0e 94 5e 01 	call	0x2bc	; 0x2bc <LCD_send_cmd>
 334:	8f e1       	ldi	r24, 0x1F	; 31
 336:	9e e4       	ldi	r25, 0x4E	; 78
 338:	01 97       	sbiw	r24, 0x01	; 1
 33a:	f1 f7       	brne	.-4      	; 0x338 <LCD_inti+0x5c>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <LCD_inti+0x62>
 33e:	00 00       	nop
 340:	6e e0       	ldi	r22, 0x0E	; 14
 342:	8c 2f       	mov	r24, r28
 344:	0e 94 5e 01 	call	0x2bc	; 0x2bc <LCD_send_cmd>
 348:	66 e0       	ldi	r22, 0x06	; 6
 34a:	8c 2f       	mov	r24, r28
 34c:	0e 94 5e 01 	call	0x2bc	; 0x2bc <LCD_send_cmd>
 350:	df 91       	pop	r29
 352:	cf 91       	pop	r28
 354:	1f 91       	pop	r17
 356:	08 95       	ret

00000358 <LCD_send_char>:
 358:	0e 94 34 01 	call	0x268	; 0x268 <DIO_write_port>
 35c:	41 e0       	ldi	r20, 0x01	; 1
 35e:	61 e0       	ldi	r22, 0x01	; 1
 360:	82 e4       	ldi	r24, 0x42	; 66
 362:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_writepin>
 366:	0e 94 47 01 	call	0x28e	; 0x28e <send_falling_edge>
 36a:	8f ec       	ldi	r24, 0xCF	; 207
 36c:	97 e0       	ldi	r25, 0x07	; 7
 36e:	01 97       	sbiw	r24, 0x01	; 1
 370:	f1 f7       	brne	.-4      	; 0x36e <LCD_send_char+0x16>
 372:	00 c0       	rjmp	.+0      	; 0x374 <LCD_send_char+0x1c>
 374:	00 00       	nop
 376:	08 95       	ret

00000378 <LCD_send_string>:
 378:	1f 93       	push	r17
 37a:	cf 93       	push	r28
 37c:	df 93       	push	r29
 37e:	eb 01       	movw	r28, r22
 380:	68 81       	ld	r22, Y
 382:	66 23       	and	r22, r22
 384:	41 f0       	breq	.+16     	; 0x396 <LCD_send_string+0x1e>
 386:	18 2f       	mov	r17, r24
 388:	21 96       	adiw	r28, 0x01	; 1
 38a:	81 2f       	mov	r24, r17
 38c:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
 390:	69 91       	ld	r22, Y+
 392:	61 11       	cpse	r22, r1
 394:	fa cf       	rjmp	.-12     	; 0x38a <LCD_send_string+0x12>
 396:	df 91       	pop	r29
 398:	cf 91       	pop	r28
 39a:	1f 91       	pop	r17
 39c:	08 95       	ret

0000039e <LCD_movecursor>:
	_delay_ms(10);
}
void LCD_movecursor(char port,char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
 39e:	9f ef       	ldi	r25, 0xFF	; 255
 3a0:	96 0f       	add	r25, r22
 3a2:	92 30       	cpi	r25, 0x02	; 2
 3a4:	70 f4       	brcc	.+28     	; 0x3c2 <LCD_movecursor+0x24>
 3a6:	9f ef       	ldi	r25, 0xFF	; 255
 3a8:	94 0f       	add	r25, r20
 3aa:	90 31       	cpi	r25, 0x10	; 16
 3ac:	60 f4       	brcc	.+24     	; 0x3c6 <LCD_movecursor+0x28>
	{
		data=0x80;
	}
	else if(row==1)
 3ae:	61 30       	cpi	r22, 0x01	; 1
 3b0:	19 f4       	brne	.+6      	; 0x3b8 <LCD_movecursor+0x1a>
	{
		data=0x80+coloumn-1 ;
 3b2:	2f e7       	ldi	r18, 0x7F	; 127
 3b4:	24 0f       	add	r18, r20
 3b6:	08 c0       	rjmp	.+16     	; 0x3c8 <LCD_movecursor+0x2a>
	}
	else if (row==2)
 3b8:	62 30       	cpi	r22, 0x02	; 2
 3ba:	31 f4       	brne	.+12     	; 0x3c8 <LCD_movecursor+0x2a>
	{
		data=0xc0+coloumn-1;
 3bc:	2f eb       	ldi	r18, 0xBF	; 191
 3be:	24 0f       	add	r18, r20
 3c0:	03 c0       	rjmp	.+6      	; 0x3c8 <LCD_movecursor+0x2a>
void LCD_movecursor(char port,char row,char coloumn)
{
	char data ;
	if(row>2||row<1||coloumn>16||coloumn<1)
	{
		data=0x80;
 3c2:	20 e8       	ldi	r18, 0x80	; 128
 3c4:	01 c0       	rjmp	.+2      	; 0x3c8 <LCD_movecursor+0x2a>
 3c6:	20 e8       	ldi	r18, 0x80	; 128
	}
	else if (row==2)
	{
		data=0xc0+coloumn-1;
	}
	LCD_send_cmd(port,data);
 3c8:	62 2f       	mov	r22, r18
 3ca:	0e 94 5e 01 	call	0x2bc	; 0x2bc <LCD_send_cmd>
 3ce:	08 95       	ret

000003d0 <main>:
#include <avr/io.h>
#include "LCD.h"

int main(void)
{
	LCD_inti('A','B',0);
 3d0:	40 e0       	ldi	r20, 0x00	; 0
 3d2:	50 e0       	ldi	r21, 0x00	; 0
 3d4:	62 e4       	ldi	r22, 0x42	; 66
 3d6:	81 e4       	ldi	r24, 0x41	; 65
 3d8:	0e 94 6e 01 	call	0x2dc	; 0x2dc <LCD_inti>
	LCD_send_string('A',"Doha Magdy");
 3dc:	60 e6       	ldi	r22, 0x60	; 96
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	81 e4       	ldi	r24, 0x41	; 65
 3e2:	0e 94 bc 01 	call	0x378	; 0x378 <LCD_send_string>
	
	LCD_send_cmd('A',0x40);
 3e6:	60 e4       	ldi	r22, 0x40	; 64
 3e8:	81 e4       	ldi	r24, 0x41	; 65
 3ea:	0e 94 5e 01 	call	0x2bc	; 0x2bc <LCD_send_cmd>
	LCD_send_char('A',0b00011000);//DD
 3ee:	68 e1       	ldi	r22, 0x18	; 24
 3f0:	81 e4       	ldi	r24, 0x41	; 65
 3f2:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000111);
 3f6:	67 e0       	ldi	r22, 0x07	; 7
 3f8:	81 e4       	ldi	r24, 0x41	; 65
 3fa:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00011001);
 3fe:	69 e1       	ldi	r22, 0x19	; 25
 400:	81 e4       	ldi	r24, 0x41	; 65
 402:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00011111);
 406:	6f e1       	ldi	r22, 0x1F	; 31
 408:	81 e4       	ldi	r24, 0x41	; 65
 40a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 40e:	60 e0       	ldi	r22, 0x00	; 0
 410:	81 e4       	ldi	r24, 0x41	; 65
 412:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 416:	60 e0       	ldi	r22, 0x00	; 0
 418:	81 e4       	ldi	r24, 0x41	; 65
 41a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 41e:	60 e0       	ldi	r22, 0x00	; 0
 420:	81 e4       	ldi	r24, 0x41	; 65
 422:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 426:	60 e0       	ldi	r22, 0x00	; 0
 428:	81 e4       	ldi	r24, 0x41	; 65
 42a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	
	LCD_send_char('A',0b00011000);//7
 42e:	68 e1       	ldi	r22, 0x18	; 24
 430:	81 e4       	ldi	r24, 0x41	; 65
 432:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00001100);
 436:	6c e0       	ldi	r22, 0x0C	; 12
 438:	81 e4       	ldi	r24, 0x41	; 65
 43a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000011);
 43e:	63 e0       	ldi	r22, 0x03	; 3
 440:	81 e4       	ldi	r24, 0x41	; 65
 442:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00011111);
 446:	6f e1       	ldi	r22, 0x1F	; 31
 448:	81 e4       	ldi	r24, 0x41	; 65
 44a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 44e:	60 e0       	ldi	r22, 0x00	; 0
 450:	81 e4       	ldi	r24, 0x41	; 65
 452:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 456:	60 e0       	ldi	r22, 0x00	; 0
 458:	81 e4       	ldi	r24, 0x41	; 65
 45a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 45e:	60 e0       	ldi	r22, 0x00	; 0
 460:	81 e4       	ldi	r24, 0x41	; 65
 462:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 466:	60 e0       	ldi	r22, 0x00	; 0
 468:	81 e4       	ldi	r24, 0x41	; 65
 46a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	
	LCD_send_char('A',0b00000000);//A
 46e:	60 e0       	ldi	r22, 0x00	; 0
 470:	81 e4       	ldi	r24, 0x41	; 65
 472:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 476:	60 e0       	ldi	r22, 0x00	; 0
 478:	81 e4       	ldi	r24, 0x41	; 65
 47a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 47e:	60 e0       	ldi	r22, 0x00	; 0
 480:	81 e4       	ldi	r24, 0x41	; 65
 482:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00010001);
 486:	61 e1       	ldi	r22, 0x11	; 17
 488:	81 e4       	ldi	r24, 0x41	; 65
 48a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00010001);
 48e:	61 e1       	ldi	r22, 0x11	; 17
 490:	81 e4       	ldi	r24, 0x41	; 65
 492:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00011111);
 496:	6f e1       	ldi	r22, 0x1F	; 31
 498:	81 e4       	ldi	r24, 0x41	; 65
 49a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00011111);
 49e:	6f e1       	ldi	r22, 0x1F	; 31
 4a0:	81 e4       	ldi	r24, 0x41	; 65
 4a2:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 4a6:	60 e0       	ldi	r22, 0x00	; 0
 4a8:	81 e4       	ldi	r24, 0x41	; 65
 4aa:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	
	LCD_send_char('A',0b00000000);//M
 4ae:	60 e0       	ldi	r22, 0x00	; 0
 4b0:	81 e4       	ldi	r24, 0x41	; 65
 4b2:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00001111);
 4b6:	6f e0       	ldi	r22, 0x0F	; 15
 4b8:	81 e4       	ldi	r24, 0x41	; 65
 4ba:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00001001);
 4be:	69 e0       	ldi	r22, 0x09	; 9
 4c0:	81 e4       	ldi	r24, 0x41	; 65
 4c2:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00011111);
 4c6:	6f e1       	ldi	r22, 0x1F	; 31
 4c8:	81 e4       	ldi	r24, 0x41	; 65
 4ca:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 4ce:	60 e0       	ldi	r22, 0x00	; 0
 4d0:	81 e4       	ldi	r24, 0x41	; 65
 4d2:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 4d6:	60 e0       	ldi	r22, 0x00	; 0
 4d8:	81 e4       	ldi	r24, 0x41	; 65
 4da:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 4de:	60 e0       	ldi	r22, 0x00	; 0
 4e0:	81 e4       	ldi	r24, 0x41	; 65
 4e2:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 4e6:	60 e0       	ldi	r22, 0x00	; 0
 4e8:	81 e4       	ldi	r24, 0x41	; 65
 4ea:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	
	LCD_send_char('A',0b00011000);//G
 4ee:	68 e1       	ldi	r22, 0x18	; 24
 4f0:	81 e4       	ldi	r24, 0x41	; 65
 4f2:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00001100);
 4f6:	6c e0       	ldi	r22, 0x0C	; 12
 4f8:	81 e4       	ldi	r24, 0x41	; 65
 4fa:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000011);
 4fe:	63 e0       	ldi	r22, 0x03	; 3
 500:	81 e4       	ldi	r24, 0x41	; 65
 502:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00011111);
 506:	6f e1       	ldi	r22, 0x1F	; 31
 508:	81 e4       	ldi	r24, 0x41	; 65
 50a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 50e:	60 e0       	ldi	r22, 0x00	; 0
 510:	81 e4       	ldi	r24, 0x41	; 65
 512:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000110);
 516:	66 e0       	ldi	r22, 0x06	; 6
 518:	81 e4       	ldi	r24, 0x41	; 65
 51a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 51e:	60 e0       	ldi	r22, 0x00	; 0
 520:	81 e4       	ldi	r24, 0x41	; 65
 522:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 526:	60 e0       	ldi	r22, 0x00	; 0
 528:	81 e4       	ldi	r24, 0x41	; 65
 52a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	
	LCD_send_char('A',0b00000011);//D
 52e:	63 e0       	ldi	r22, 0x03	; 3
 530:	81 e4       	ldi	r24, 0x41	; 65
 532:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000011);
 536:	63 e0       	ldi	r22, 0x03	; 3
 538:	81 e4       	ldi	r24, 0x41	; 65
 53a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000011);
 53e:	63 e0       	ldi	r22, 0x03	; 3
 540:	81 e4       	ldi	r24, 0x41	; 65
 542:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00011111);
 546:	6f e1       	ldi	r22, 0x1F	; 31
 548:	81 e4       	ldi	r24, 0x41	; 65
 54a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 54e:	60 e0       	ldi	r22, 0x00	; 0
 550:	81 e4       	ldi	r24, 0x41	; 65
 552:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 556:	60 e0       	ldi	r22, 0x00	; 0
 558:	81 e4       	ldi	r24, 0x41	; 65
 55a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 55e:	60 e0       	ldi	r22, 0x00	; 0
 560:	81 e4       	ldi	r24, 0x41	; 65
 562:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 566:	60 e0       	ldi	r22, 0x00	; 0
 568:	81 e4       	ldi	r24, 0x41	; 65
 56a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	
	LCD_send_char('A',0b00000000);//Y
 56e:	60 e0       	ldi	r22, 0x00	; 0
 570:	81 e4       	ldi	r24, 0x41	; 65
 572:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000011);
 576:	63 e0       	ldi	r22, 0x03	; 3
 578:	81 e4       	ldi	r24, 0x41	; 65
 57a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000011);
 57e:	63 e0       	ldi	r22, 0x03	; 3
 580:	81 e4       	ldi	r24, 0x41	; 65
 582:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00010010);
 586:	62 e1       	ldi	r22, 0x12	; 18
 588:	81 e4       	ldi	r24, 0x41	; 65
 58a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00010010);
 58e:	62 e1       	ldi	r22, 0x12	; 18
 590:	81 e4       	ldi	r24, 0x41	; 65
 592:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00011110);
 596:	6e e1       	ldi	r22, 0x1E	; 30
 598:	81 e4       	ldi	r24, 0x41	; 65
 59a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00011110);
 59e:	6e e1       	ldi	r22, 0x1E	; 30
 5a0:	81 e4       	ldi	r24, 0x41	; 65
 5a2:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_send_char('A',0b00000000);
 5a6:	60 e0       	ldi	r22, 0x00	; 0
 5a8:	81 e4       	ldi	r24, 0x41	; 65
 5aa:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	
	LCD_movecursor('A',2,16);
 5ae:	40 e1       	ldi	r20, 0x10	; 16
 5b0:	62 e0       	ldi	r22, 0x02	; 2
 5b2:	81 e4       	ldi	r24, 0x41	; 65
 5b4:	0e 94 cf 01 	call	0x39e	; 0x39e <LCD_movecursor>
	LCD_send_char('A',0);//DD
 5b8:	60 e0       	ldi	r22, 0x00	; 0
 5ba:	81 e4       	ldi	r24, 0x41	; 65
 5bc:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_movecursor('A',2,15);
 5c0:	4f e0       	ldi	r20, 0x0F	; 15
 5c2:	62 e0       	ldi	r22, 0x02	; 2
 5c4:	81 e4       	ldi	r24, 0x41	; 65
 5c6:	0e 94 cf 01 	call	0x39e	; 0x39e <LCD_movecursor>
	LCD_send_char('A',1);//7
 5ca:	61 e0       	ldi	r22, 0x01	; 1
 5cc:	81 e4       	ldi	r24, 0x41	; 65
 5ce:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_movecursor('A',2,14);
 5d2:	4e e0       	ldi	r20, 0x0E	; 14
 5d4:	62 e0       	ldi	r22, 0x02	; 2
 5d6:	81 e4       	ldi	r24, 0x41	; 65
 5d8:	0e 94 cf 01 	call	0x39e	; 0x39e <LCD_movecursor>
	LCD_send_char('A',2);//A
 5dc:	62 e0       	ldi	r22, 0x02	; 2
 5de:	81 e4       	ldi	r24, 0x41	; 65
 5e0:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_movecursor('A',2,13);
 5e4:	4d e0       	ldi	r20, 0x0D	; 13
 5e6:	62 e0       	ldi	r22, 0x02	; 2
 5e8:	81 e4       	ldi	r24, 0x41	; 65
 5ea:	0e 94 cf 01 	call	0x39e	; 0x39e <LCD_movecursor>
	
	LCD_send_char('A',32);//space
 5ee:	60 e2       	ldi	r22, 0x20	; 32
 5f0:	81 e4       	ldi	r24, 0x41	; 65
 5f2:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_movecursor('A',2,12);
 5f6:	4c e0       	ldi	r20, 0x0C	; 12
 5f8:	62 e0       	ldi	r22, 0x02	; 2
 5fa:	81 e4       	ldi	r24, 0x41	; 65
 5fc:	0e 94 cf 01 	call	0x39e	; 0x39e <LCD_movecursor>
	
	LCD_send_char('A',3);//M
 600:	63 e0       	ldi	r22, 0x03	; 3
 602:	81 e4       	ldi	r24, 0x41	; 65
 604:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_movecursor('A',2,11);
 608:	4b e0       	ldi	r20, 0x0B	; 11
 60a:	62 e0       	ldi	r22, 0x02	; 2
 60c:	81 e4       	ldi	r24, 0x41	; 65
 60e:	0e 94 cf 01 	call	0x39e	; 0x39e <LCD_movecursor>
	LCD_send_char('A',4);//G
 612:	64 e0       	ldi	r22, 0x04	; 4
 614:	81 e4       	ldi	r24, 0x41	; 65
 616:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_movecursor('A',2,10);
 61a:	4a e0       	ldi	r20, 0x0A	; 10
 61c:	62 e0       	ldi	r22, 0x02	; 2
 61e:	81 e4       	ldi	r24, 0x41	; 65
 620:	0e 94 cf 01 	call	0x39e	; 0x39e <LCD_movecursor>
	LCD_send_char('A',5);//D
 624:	65 e0       	ldi	r22, 0x05	; 5
 626:	81 e4       	ldi	r24, 0x41	; 65
 628:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_movecursor('A',2,9);
 62c:	49 e0       	ldi	r20, 0x09	; 9
 62e:	62 e0       	ldi	r22, 0x02	; 2
 630:	81 e4       	ldi	r24, 0x41	; 65
 632:	0e 94 cf 01 	call	0x39e	; 0x39e <LCD_movecursor>
	LCD_send_char('A',6);
 636:	66 e0       	ldi	r22, 0x06	; 6
 638:	81 e4       	ldi	r24, 0x41	; 65
 63a:	0e 94 ac 01 	call	0x358	; 0x358 <LCD_send_char>
	LCD_movecursor('A',2,8);
 63e:	48 e0       	ldi	r20, 0x08	; 8
 640:	62 e0       	ldi	r22, 0x02	; 2
 642:	81 e4       	ldi	r24, 0x41	; 65
 644:	0e 94 cf 01 	call	0x39e	; 0x39e <LCD_movecursor>
 648:	ff cf       	rjmp	.-2      	; 0x648 <__LOCK_REGION_LENGTH__+0x248>

0000064a <_exit>:
 64a:	f8 94       	cli

0000064c <__stop_program>:
 64c:	ff cf       	rjmp	.-2      	; 0x64c <__stop_program>
